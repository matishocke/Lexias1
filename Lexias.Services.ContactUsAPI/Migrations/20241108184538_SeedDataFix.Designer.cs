// <auto-generated />
using System;
using Lexias.Services.ContactUsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lexias.Services.ContactUsAPI.Migrations
{
    [DbContext(typeof(ContactUsDbContext))]
    [Migration("20241108184538_SeedDataFix")]
    partial class SeedDataFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lexias.Services.ContactUsAPI.Models.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 7, 18, 45, 38, 450, DateTimeKind.Utc).AddTicks(2359),
                            Email = "john.doe@example.com",
                            Message = "Hello, I would like more information about your services.",
                            Name = "John Doe",
                            Subject = "Inquiry about services"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 6, 18, 45, 38, 450, DateTimeKind.Utc).AddTicks(2365),
                            Email = "jane.smith@example.com",
                            Message = "I'm having an issue with my recent purchase.",
                            Name = "Jane Smith",
                            Subject = "Support Request"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 11, 5, 18, 45, 38, 450, DateTimeKind.Utc).AddTicks(2367),
                            Email = "michael.johnson@example.com",
                            Message = "Could you provide me with the price list?",
                            Name = "Michael Johnson",
                            Subject = "General Question"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
